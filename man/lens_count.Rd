% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lens_count.R
\name{lens_count}
\alias{lens_count}
\title{Retrieve patent family counts from a query to the Lens}
\usage{
lens_count(query, boolean = "NULL", type = "NULL", rank_family = "NULL",
  rank_citing = "NULL", rank_sequences = "NULL",
  latest_publication = "NULL", earliest_publication = "NULL",
  latest_filing = "NULL", earliest_filing = "NULL", families = TRUE)
}
\arguments{
\item{query}{One or more terms to search in the patent database (one or two words only at present)}

\item{boolean}{Select the type of boolean ("OR" or "AND") where using multiple search terms.}

\item{type}{Either fulltext (default), title, abstract, claims, or title,
abstract and claims (tac). Quoted.}

\item{rank_family}{Whether to sort the Lens results by the number of family
members (descending). Useful for retrieving important documents. See
details.}

\item{rank_citing}{Whether to sort the Lens results by the top citing
(descending). Useful for retrieving important documents. See details.}

\item{rank_sequences}{Rank results on whether the documents contain a dna or amino
acid sequence. See details.}

\item{latest_publication}{Sort results by the latest publication date.
Useful for retrieving the most recent documents. See details.}

\item{earliest_publication}{Sort results by the earliest publication date.
See details.}

\item{latest_filing}{Sort results by the latest filing (priority) date.
Useful for identifying the latest filings (note that they are the latest
filings that have a publication). See details.}

\item{earliest_filing}{Sort results by the earliest publication date. See
details.}

\item{families}{The function returns both the publication count and family count (default). If
families = TRUE return the number of patent families will be returned (deduplicates a set of
publications to the first publication of the root "priority" or first
filing).}
}
\value{
data.frame
}
\description{
A short version lf lens_search that returns the results from a query to the Lens. Useful for working out the overall number of results from a query for refinement or download.
}
\examples{
\dontrun{lens_count("drones")}
}

